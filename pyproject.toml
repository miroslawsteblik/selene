[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "selene"
version = "1.0.0"
description = "A tool for connecting and transforming data from various sources"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "Miroslaw Steblik", email = "miroslawsteblik@gmail.com" }
]
requires-python = ">=3.10"

dependencies = [
    "pandas>=1.3.0",
    "toml>=0.10.0",
    "openpyxl>=3.0.0",
    "pyyaml>=6.0",
    "requests>=2.25.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "pyodbc>=4.0.0",  # For MSSQL via ODBC
    "python-dotenv>=1.1.1",
    "types-PyYAML",
    "types-requests",
    "types-python-dotenv"

]

# pip install -e .[dev]  | pip install -e ".[dev]"
[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "pylint>=2.12",
    "mypy>=0.910",
    "flake8>=4.0",
]


[tool.setuptools]
# Include package data declared below
include-package-data = true

# Discover all packages under the "selene" namespace.
packages = { find = { include = ["selene*"], namespaces = true } }

# Include top-level main.py as a module for the console script entry point
py-modules = ["main"]

[project.scripts]
selene = "main:main"

[tool.setuptools.package-data]
# Include YAML files that live inside Python packages (selene/**). This does not
# include top-level project files like ./config/*.yaml; if you need those in wheels,
# consider moving them under the package or using 'data-files' below.
"*" = ["**/*.yaml"]

# Optional: If you want to ship top-level ./config/*.yaml with the wheel, uncomment
# the data-files section below. Beware these install to a platform-specific location.
[tool.setuptools.data-files]
"selene-config" = ["config/*.yaml"]



[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88


[tool.pylint]
max-line-length = 88
disable = ["C0111", "C0103", "R0903", "E1101", "E0611"]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_no_return = true
strict_equality = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
